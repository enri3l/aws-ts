# Release Workflow
#
# Automated release pipeline using Release-Please for PR-based releases.
# Creates Release PRs with version bumps and changelogs, then publishes
# when Release PR is merged.
#
# Triggered on: Push to main branch (after PR merge)
# Security: OIDC token for JSR provenance, comprehensive dependency review
# Output: Release PR creation or JSR package + GitHub release

name: Release
on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    permissions:
      contents: write # GitHub release creation and git operations
      pull-requests: write # Release PR creation and management
      id-token: write # OIDC token for JSR provenance attestations
    steps:
      # Release-Please action creates Release PRs or triggers releases
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

      # Only run when Release PR is merged (release created)
      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Enable corepack
        if: ${{ steps.release.outputs.release_created }}
        run: corepack enable

      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm install

      - name: Build package
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm build

      - name: Security audit
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm audit

      # Package content validation before publishing
      - name: Pre-publish validation
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm dlx jsr publish --dry-run

      - name: Publish to JSR
        if: ${{ steps.release.outputs.release_created }}
        run: pnpm dlx jsr publish
