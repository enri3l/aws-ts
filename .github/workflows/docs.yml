# Documentation Deployment Workflow
#
# Automated documentation build and deployment to GitHub Pages.
# Triggered on documentation changes or manual dispatch for immediate updates.
# Uses VitePress for static site generation with TypeDoc API documentation.
#
# Triggered on: Push to main with docs changes, manual workflow dispatch
# Environment: GitHub Pages deployment with proper OIDC authentication
# Output: Published documentation site at GitHub Pages URL

name: Documentation
on:
  push:
    branches: [main]
    paths:
      - "docs/**" # VitePress documentation content
      - "*.md" # Root-level markdown files
      - "package.json" # Dependency changes affecting docs build
  workflow_dispatch: # Manual deployment trigger

permissions:
  contents: read # Repository content access
  pages: write # GitHub Pages deployment
  id-token: write # OIDC token for secure Pages deployment

# Prevent concurrent deployments to avoid conflicts
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Documentation build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Repository checkout for documentation source files
      - uses: actions/checkout@v4

      # Node.js LTS setup with pnpm caching for dependency management
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      # Install dependencies including VitePress and documentation toolchain
      - name: Install dependencies
        run: pnpm install

      # Build VitePress documentation site with TypeDoc API generation
      # Generates: API docs from TSDoc, static site from markdown
      - name: Build documentation
        run: pnpm docs:build

      # Upload built documentation as Pages artifact
      # Artifact contains: VitePress static site, TypeDoc API docs
      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # GitHub Pages deployment job
  deploy:
    environment:
      name: GitHub Pages # Exactly named environment as requested
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy documentation to GitHub Pages using official action
      # Provides: Secure OIDC-based deployment, automatic URL generation
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
